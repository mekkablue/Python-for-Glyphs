<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>content</key>
	<string>${1:from Foundation import NSPoint
}
def intersect(pointA, pointB, pointC, pointD):
	"""
	Returns an NSPoint of the intersection AB with CD,
	or None if there is no intersection.
	pointA, pointB: NSPoints or GSNodes representing the first line AB,
	pointC, pointD: NSPoints or GSNodes representing the second line CD.
	"""
	xA, yA = pointA.x, pointA.y
	xB, yB = pointB.x, pointB.y
	xC, yC = pointC.x, pointC.y
	xD, yD = pointD.x, pointD.y
	
	try:
		slopeAB = (float(yB) - float(yA)) / (float(xB) - float(xA))
	except:
		slopeAB = None # division by zero if vertical
	
	try:
		slopeCD = (float(yD) - float(yC)) / (float(xD) - float(xC))
	except:
		slopeCD = None # division by zero if vertical
	
	if slopeAB == slopeCD: # parallel, no intersection
		return None
	elif slopeAB is None: # first line is vertical
		x = xA
		y = slopeCD * (x - xC) + yC
	elif slopeCD is None: # second line is vertical
		x = xC
		y = slopeAB * (x - xA) + yA
	else: # both lines have different angles other than vertical
		x = (slopeAB * xA - yA - slopeCD * xC + yC) / (slopeAB - slopeCD)
		y = slopeAB * (x - xA) + yA
		
	return NSPoint(x, y)
$0</string>
	<key>name</key>
	<string>py intersect two lines</string>
	<key>tabTrigger</key>
	<string>intersect</string>
	<key>uuid</key>
	<string>73E8D678-EE48-4BA2-B7CC-BDB76113E635</string>
</dict>
</plist>
